Новый план рефакторинга.
Изменяем структуру сбора и расчета компонентов, входящих в Templates.
Переменные - четырех типов, как и сделано сейчас (Integer, Double, String, Boolean).
Формулы всегда возвращают число. Возврат 0 - формула отключена, отрицательное число - ошибка. Все значения - это минимальные исчислимые единицы - секунды, милиметры, копейки.

1. Уровень Templates
1.1 Переменные: requiredQuantity - тираж изделий, totalWeight - вес изделий, totalTime - время на производство изделий, totalCost - цена единицы изделия.
1.2 Формулы: формула округления цены изделия, формула корректировки маржи от тиража изделий (не реализовано).

2. Уровень AbstractProductType
2.1 Переменные: все переменные, доступные на этом уровне - доступны как динамические. Например, для однолистовой печати это длина/ширина изделия, bleed - отступы, multiplication - замостить печатный лист или нет. Добавляется расчетный параметр realQuantity - фактический тираж изделий, который будет вычислятся формулами типа Приводка и Брак.
2.2 Все переменные величины из конкретной реализации AbstractMaterial доступны, как динамические. Например, для бумаги - это плотность бумаги, длина и ширина листа бумаги.
2.3 Формулы: на этом уровне нет.

3. Уровень ProductOperation
3.1 Переменные: доступны те, которые мы добавили из Operation. Все остальные вспомогательные - создаются внутри формул расчета.
3.2 Формулы: без изменений, доступны 5 формул из Operation. Каждая - это свой этап расчета. Теперь нам пригодятся соответствующие записи этапа в Formulas. Это Приводка, Брак - вычисляющие промежуточные значения количества тиража (никаких листажей нет) для расчета realQuantity.
И три ВремяРаботыОборудования, ВремяРаботыСотрудника, КоличествоРасходногоМатериалаОперации. Они тоже помечены как этапы.

4. Подготовительный расчет realQuantity.
4.1 Нам надо получить realQuantity. Для этого надо знать количество операций при текущем тираже. Здесь есть кусок кода на groovy, который будет подсчитывать экстраТираж в трех разных формулах, он одинаков для Приводки, Брака и, возможно, для КоличествоРасходногоМатериалаОперации. Надо подумать, как красиво это организовать. Либо ничего не делать, пусть считает. Бежим по всем ProductOperation. Выполняем формулы realQuantity = realQuantity + max(Приводка) + sum(Брак). Например, для однолистовой печати на лазерном притере в Приводке мы вычисляем количество изделий на печатном листе (это вычисление как раз и будет повторяться), умножаем их на число листов в приводке = дополнительный тираж изделий. В Браке мы вычисляем количество изделий на печатном листе (это вычисление как раз и будет повторяться), умножаем их на процент брака = дополнительный тираж изделий. 
4.2 Получив realQuantity мы можем приступать к расчету остальных формул.

5. Расчет визических величин. Предлагаю заносить значения в некий Список POJO классов: (Название операции, ID оборудования, время оборудования, ID оператора, время оператора, ID материала, количество материала, вес материала). Удобно будет делать бумажную калькуляцию для заказчика и удобно считать итоговую цену. Бежим по всем ProductOperation.
5.0 Создаем новый POJO класс - название ProductOperation.getName()
5.1 Считаем формулу ВремяРаботыОборудования - добавляем значения в POJO класс
5.2 Считаем формулу ВремяРаботыСотрудника - добавляем значения в POJO класс
5.3 Считаем формулу КоличествоРасходногоМатериалаОперации - добавляем значения в POJO класс. Если у расходки есть плотность или вес - считаем по формуле совокупный вес этого расходника requiredQuantity количество изделий, размером - расмер изделия.
5.4 Записываем класс в Список
5.5 Мы получили модель (калькуляцию) для расчета продукта.

6. Итоговый финансовый расчет.
6.1 Бежим по списку POJO классов, берем ID оборудования, ищем цену оборудования по ID. Умножаем на время оборудования.
6.2 Берем ID материала, ищем цену материала по ID. Умножаем на количество материала.
6.3 Берем ID оператора, ищем цену оператора по ID. Умножаем на время оператора. Все три пунка ссумируем.
6.4 Суммируем суммы каждого POJO. Получаем расчетную себестоимость. Суммируем вес - дополнительный вес изделия. Суммируем max(время оборудования,время оператора) - время изготовления.

6.5 Применям маржу, налоги и бакновские издержки из Templates. Считаем цену тиража, делим на тираж, полученную цену изделяя округляем по формуле округления цены. Вес основного материала суммируем с дополнительный вес изделия.
6.6 Заносим все полученые данные в нашу специальную запись.

7. При изменении тиража все полностью пересчитывается. Итерируются также все входящие в Templates AbstractProductType.